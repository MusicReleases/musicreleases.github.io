@using JakubKastner.MusicReleases.Services.BaseServices
@using JakubKastner.MusicReleases.Web.Components.LoggedIn.Menus.Header.Buttons
@using JakubKastner.SpotifyApi.Base
@using static JakubKastner.MusicReleases.Base.Enums

@implements IDisposable

@inject ISpotifyFilterService SpotifyFilterService

<ButtonClearFilter Type="MenuButtonsType.Releases">
</ButtonClearFilter>

@if (SpotifyFilterService.Filter!.ReleaseType == SpotifyEnums.ReleaseType.Tracks || SpotifyFilterService.Filter.ReleaseType == SpotifyEnums.ReleaseType.Appears)
{
	<ButtonAdvancedFilter Type="Enums.ReleasesFilters.Tracks" Title="tracks">
		Tracks
	</ButtonAdvancedFilter>

	<ButtonAdvancedFilter Type="Enums.ReleasesFilters.EPs" Title="EPs">
		@if (SpotifyFilterService.Filter.ReleaseType == SpotifyEnums.ReleaseType.Appears)
		{
			@:Albums and EPs
		}
		else
		{
			@:EPs
		}
	</ButtonAdvancedFilter>
}


<ButtonAdvancedFilter Type="Enums.ReleasesFilters.NotRemixes" Title="not remixes">
	Not remixes
</ButtonAdvancedFilter>

<ButtonAdvancedFilter Type="Enums.ReleasesFilters.Remixes" Title="remixes">
	Remixes
</ButtonAdvancedFilter>

<ButtonAdvancedFilter Type="Enums.ReleasesFilters.FollowedArtists" Title="releases from the artists I am following">
	Followed artists
</ButtonAdvancedFilter>

<ButtonAdvancedFilter Type="Enums.ReleasesFilters.SavedReleases" Title="saved releases in library">
	Saved releases
</ButtonAdvancedFilter>

<ButtonAdvancedFilter Type="Enums.ReleasesFilters.NotVariousArtists" Title="releases from not various artists">
	Not various artists
</ButtonAdvancedFilter>

<ButtonAdvancedFilter Type="Enums.ReleasesFilters.VariousArtists" Title="releases from various artists">
	Various artists
</ButtonAdvancedFilter>

<ButtonAdvancedFilter Type="Enums.ReleasesFilters.NewReleases" Title="new releases">
	New releases
</ButtonAdvancedFilter>

<ButtonAdvancedFilter Type="Enums.ReleasesFilters.OldReleases" Title="old releases">
	Old releases
</ButtonAdvancedFilter>
@using JakubKastner.MusicReleases
@using JakubKastner.SpotifyApi
@using JakubKastner.SpotifyApi.Controllers;
@using static global::JakubKastner.MusicReleases.Base.Enums;
@inject NavigationManager NavManager
@inject ControllerUser controllerUser

<button type="button" class="@_type.ToLower()" @onclick="LoginUser">
    <i class="fab fa-spotify" aria-hidden="true"></i>
    <span>Login via @_type</span>
</button>

@code
{
    /// <summary>
    /// Service type (Spotify, Apple Music, ...)
    /// </summary>
    [Parameter]
    public ServiceType Type { get; set; }

    private string _type = String.Empty;

    protected override void OnInitialized()
    {
        _type = Type.ToString();
    }


    /// <summary>
    /// User clicked to login button.
    /// </summary>
    private void LoginUser()
    {
        if (Type == ServiceType.Spotify)
        {
            // spotify login
            var redirectUrl = NavManager.ToAbsoluteUri(NavManager.BaseUri + "login");
            var loginUrl = controllerUser.GetLoginUrl(redirectUrl);
            NavManager.NavigateTo(loginUrl.AbsoluteUri);
        }
    }
}

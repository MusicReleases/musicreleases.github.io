@inherits LayoutComponentBase;

@using JakubKastner.SpotifyApi;
@using JakubKastner.SpotifyApi.Controllers.Api;
@using JakubKastner.SpotifyApi.Controllers;
@using JakubKastner.SpotifyApi.Objects;
@using SpotifyAPI.Web;

@inject NavigationManager _navManager;
@inject ControllerUser _spotifyControllerUser;

<div class="body classic hide-player">
	<div class="page">
		<p>Loggin in user</p>
	</div>
</div>

@code
{
	// TODO loading page
	protected override async Task OnInitializedAsync()
	{
		if (!_spotifyControllerUser.IsLoggedIn())
		{
			// get token from url
			var currentUrl = _navManager.Uri;
			var user = await _spotifyControllerUser.LoginUser(currentUrl);
			if (user)
			{
				// navigate to releases page
				// TODO change release type
				_navManager.NavigateTo("releases/albums");
			}
			else
			{
				// user is not logged in (error)
				_navManager.NavigateTo("");
			}
			//await Api.Spotify.Base.SetUser();
		}
	}
}

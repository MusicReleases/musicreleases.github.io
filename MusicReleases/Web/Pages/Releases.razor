@page "/releases/{type?}/{year?}/{month?}/{artistId?}"

@using Fluxor
@using Fluxor.Blazor.Web.Components
@using JakubKastner.MusicReleases.Services.ApiServices
@using JakubKastner.MusicReleases.Services.ApiServices.SpotifyServices
@using JakubKastner.MusicReleases.Services.BaseServices
@using JakubKastner.MusicReleases.Store.ApiStore.SpotifyStore.SpotifyArtistStore
@using JakubKastner.MusicReleases.Store.ApiStore.SpotifyStore.SpotifyReleaseStore
@using JakubKastner.MusicReleases.Store.FilterStore
@using JakubKastner.MusicReleases.Web.Components.LoggedIn.Releases

@layout LayoutMain

@inherits FluxorComponent

@inject ISpotifyWorkflowService SpotifyWorkflowService
@inject IApiLoginService ApiLoginService
@inject IState<SpotifyReleaseState> SpotifyReleaseState
@inject IState<SpotifyArtistState> SpotifyArtistState
@inject IState<SpotifyFilterState> SpotifyFilterState
@inject IFilterService FilterService
@inject IDispatcher Dispatcher
@inject ISpotifyFilterService SpotifyFilterService

@if (Loading || LoadingArtists || FilteredReleases is null)
{
	<p>Loading releases...</p>
}
else if (FilteredReleases.Count < 1)
{
	<p>0 releases</p>
}
else
{

	<div class="releases boxes infinite-scroll">

		<Virtualize Items="@FilteredReleases" Context="release">
				<Release SpotifyRelease="@release" />
		</Virtualize>

	</div>
}